<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2012 SURFnet bv, The Netherlands

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

  <context:component-scan base-package="nl.surfnet.coin.teams">
    <context:exclude-filter type="regex" expression="nl\.surfnet\.coin\.teams\.service\.impl\.ApiGrouperDaoImpl"/>
  </context:component-scan>

  <bean id="log4jInitialization"
    class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
    <property name="targetMethod" value="initLogging" />
    <property name="arguments">
      <list>
        <value>classpath:log4j.xml</value>
        <value>5000</value>
      </list>
    </property>
  </bean>

  <bean id="teamEnvironment" class="nl.surfnet.coin.teams.util.TeamEnvironment">
    <property name="mockLogin" value="${mockLogin}" />
    <property name="mockName" value="${mockName}" />
    <property name="mockUserStatus" value="${mock-user-status}" />
    <property name="defaultStemName" value="${defaultStemName}" />
    <property name="version" value="@VERSION@" />
    <property name="grouperPowerUser" value="${grouperPowerUser}"/>
    <property name="oauthKey" value="${oauth-key}"/>
    <property name="oauthSecret" value="${oauth-secret}"/>
    <property name="appId" value="${appId}" />
    <property name="teamsURL" value="${teamsURL}" />
    <property name="openSocialUrl" value="${coin-container-url}" />
    <property name="systemEmail" value="${systemEmail}"/>
    <property name="maxUploadSize" value="${form.maxuploadsize}" />
    <property name="maxInvitations" value="${maxInvitations}"/>
    <property name="groupNameContext" value="${group-name-context}"/>
    <property name="shindigHost" value="${shindigHost}"/>
  </bean>

  <bean id="grouperTeamService" class="${grouperTeamService}" />

   <!-- Configure the multipart resolver -->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- maxUploadSize: in bytes -->
    <property name="maxUploadSize" value="${form.maxuploadsize}" />
  </bean>

  <bean id="localeResolver"
    class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
    <!-- Set the default Locale to English -->
    <property name="defaultLocale" value="en_EN" />
  </bean>

  <bean id="grouperDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method="close">
    <property name="driverClass" value="${coin-grouper-db-driver}" />
    <property name="jdbcUrl" value="${coin-grouper-db-url}" />
    <property name="user" value="${coin-grouper-db-username}" />
    <property name="password" value="${coin-grouper-db-password}" />
    <property name="initialPoolSize" value="1" />
    <property name="maxPoolSize" value="20" />
    <property name="minPoolSize" value="1" />
    <property name="acquireIncrement" value="2" />
    <property name="acquireRetryAttempts" value="15" />
    <!--Check every 15 minutes -->
    <property name="idleConnectionTestPeriod" value="15" />
    <property name="maxIdleTime" value="15" />
  </bean>

  <bean id="grouperJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <constructor-arg ref="grouperDataSource"/>
  </bean>

  <bean id="ebDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method="close">
    <property name="driverClass" value="${coin-eb-db-driver}" />
    <property name="jdbcUrl" value="${coin-eb-db-url}" />
    <property name="user" value="${coin-eb-db-username}" />
    <property name="password" value="${coin-eb-db-password}" />
    <property name="initialPoolSize" value="1" />
    <property name="maxPoolSize" value="20" />
    <property name="minPoolSize" value="1" />
    <property name="acquireIncrement" value="2" />
    <property name="acquireRetryAttempts" value="15" />
    <!--Check every 15 minutes -->
    <property name="idleConnectionTestPeriod" value="15" />
    <property name="maxIdleTime" value="15" />
  </bean>

  <bean id="ebJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <constructor-arg ref="ebDataSource"/>
  </bean>

  <bean id="groupProviderService" class="nl.surfnet.coin.teams.service.impl.GroupProviderServiceSQLImpl">
    <constructor-arg ref="ebJdbcTemplate"/>
  </bean>

  <bean id="teamDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
    destroy-method="close">
    <property name="driverClass" value="${coin-team-db-driver}" />
    <property name="jdbcUrl" value="${coin-team-db-url}" />
    <property name="user" value="${coin-team-db-username}" />
    <property name="password" value="${coin-team-db-password}" />
    <property name="initialPoolSize" value="1" />
    <property name="maxPoolSize" value="20" />
    <property name="minPoolSize" value="1" />
    <property name="acquireIncrement" value="2" />
    <property name="acquireRetryAttempts" value="15" />
    <!--Check every 15 minutes -->
    <property name="idleConnectionTestPeriod" value="15" />
    <property name="maxIdleTime" value="15" />
  </bean>

  <bean id="teamSessionFactory" autowire="byName"
    class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource">
      <ref local="teamDataSource" />
    </property>
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">${hibernate-team.dialect}</prop>
        <!-- prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop -->
        <prop key="hibernate.query.substitutions">true 1, false 0</prop>
        <prop key="hibernate.show_sql">${hibernate-team.show_sql}</prop>
        <prop key="hibernate.format_sql">${hibernate-team.format_sql}</prop>
        <prop key="hibernate.cache.use_second_level_cache">false</prop>
        <prop key="hibernate.hbm2ddl.auto">${hibernate-team.hbm2ddl.auto}</prop>
        <prop key="hibernate.cache.use_query_cache">false</prop>
        <prop key="hibernate.jdbc.wrap_result_sets">true</prop>
        <prop key="hibernate.connection.release_mode">on_close</prop>
        <prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</prop>
        <prop key="hibernate.c3p0.min_size">2</prop>
        <prop key="hibernate.c3p0.max_size">10</prop>

        <prop key="hibernate.c3p0.acquireRetryAttempts">5</prop>
        <prop key="hibernate.c3p0.acquireIncrement">2</prop>
        <prop key="hibernate.c3p0.idleConnectionTestPeriod">15</prop>
      </props>
    </property>
    <property name="annotatedClasses">
      <list>
        <value>nl.surfnet.coin.shared.domain.DomainObject</value>
        <value>nl.surfnet.coin.teams.domain.JoinTeamRequest</value>
        <value>nl.surfnet.coin.teams.domain.Invitation</value>
        <value>nl.surfnet.coin.teams.domain.InvitationMessage</value>
        <value>nl.surfnet.coin.teams.domain.MemberAttribute</value>
      </list>
    </property>
    <property name="namingStrategy">
      <bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
    </property>
    <property name="useTransactionAwareDataSource" value="true" />
  </bean>

  <tx:annotation-driven transaction-manager="teamTransactionManager" />

  <bean id="teamTransactionManager"
    class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory">
      <ref local="teamSessionFactory" />
    </property>
  </bean>

  <bean id="freemarkerConfiguration" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
     <property name="templateLoaderPath" value="classpath:/ftl/"/>
  </bean>

</beans>
